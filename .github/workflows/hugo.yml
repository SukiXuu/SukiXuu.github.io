
name: Deploy Hugo site to S3

on:
  push:
    paths-ignore:
      - "images/**"
    branches: ["main"]
  workflow_dispatch:
    inputs:
      hugoVersion:
        description: "Hugo Version"
        required: false
        default: "0.141.0"

permissions:
  contents: read
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: ${{ github.event.inputs.hugoVersion || '0.141.0' }}
    steps:
      - name: Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb
      - name: Install Dart Sass
        run: sudo snap install dart-sass
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: 'ap-southeast-2'
      - name: Install Node.js dependencies
        run: "[[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true"
      - name: Get Theme
        run: git submodule update --init --recursive
      - name: Update theme to Latest commit
        run: git submodule update --remote --merge
      - name: Build with Hugo
        env:
          HUGO_CACHEDIR: ${{ runner.temp }}/hugo_cache
          HUGO_ENVIRONMENT: production
        run: |
          hugo --minify --baseURL "https://sukixuu.click"
      # 跨作业共享目录
      - name: Upload public directory as artifact
        uses: actions/upload-artifact@v4
        with:
          name: public
          path: ./public
      
  deploy:
    environment:
      name: production
      url: https://sukixuu.click
    runs-on: ubuntu-latest
    needs: build
    steps:
      # 跨作业共享目录
      - name: Download public directory artifact
        uses: actions/download-artifact@v4
        with:
          name: public

      - name: List files in public directory
        run: ls -alh ./public  # Confirm the contents of the public directory
      - name: Deploy to S3
        id: deployment
        run: |
          aws s3 sync ./public s3://sukixuu.click/ --delete
      - name: Invalidate CloudFront Cache  
        run: |
          aws cloudfront create-invalidation \
            --distribution-id E335WW2AH41A79 \
            --paths "/*"
